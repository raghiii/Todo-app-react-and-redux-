{"ast":null,"code":"import _toConsumableArray from \"/Users/raghav/Documents/Projects/todo/todoapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createStore } from \"redux\";\n\nvar taskReducer = function taskReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TASK\":\n      state = [].concat(_toConsumableArray(state), [{\n        caption: action.payload,\n        isCompleted: false\n      }]);\n      break;\n\n    case \"DELETE_TASK\":\n      state = state.slice();\n      console.log(action.id);\n      state.splice(action.id, 1);\n      break;\n\n    case \"MARK_TASK\":\n      state = [].concat(_toConsumableArray(state), [{\n        isCompleted: action.value\n      }]);\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nvar store = createStore(taskReducer);\nexport default store;","map":{"version":3,"sources":["/Users/raghav/Documents/Projects/todo/todoapp/src/reducers/index.js"],"names":["createStore","taskReducer","state","action","type","caption","payload","isCompleted","slice","console","log","id","splice","value","store"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACEF,MAAAA,KAAK,gCAAOA,KAAP,IAAc;AAAEG,QAAAA,OAAO,EAAEF,MAAM,CAACG,OAAlB;AAA2BC,QAAAA,WAAW,EAAE;AAAxC,OAAd,EAAL;AACA;;AACF,SAAK,aAAL;AACEL,MAAAA,KAAK,GAAGA,KAAK,CAACM,KAAN,EAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,EAAnB;AACAT,MAAAA,KAAK,CAACU,MAAN,CAAaT,MAAM,CAACQ,EAApB,EAAwB,CAAxB;AACA;;AACF,SAAK,WAAL;AACET,MAAAA,KAAK,gCAAOA,KAAP,IAAc;AAAEK,QAAAA,WAAW,EAAEJ,MAAM,CAACU;AAAtB,OAAd,EAAL;AACA;;AACF;AACE;AAbJ;;AAeA,SAAOX,KAAP;AACD,CAjBD;;AAkBA,IAAIY,KAAK,GAAGd,WAAW,CAACC,WAAD,CAAvB;AAEA,eAAea,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\nconst taskReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      state = [...state, { caption: action.payload, isCompleted: false }];\n      break;\n    case \"DELETE_TASK\":\n      state = state.slice();\n      console.log(action.id);\n      state.splice(action.id, 1);\n      break;\n    case \"MARK_TASK\":\n      state = [...state, { isCompleted: action.value }];\n      break;\n    default:\n      break;\n  }\n  return state;\n};\nlet store = createStore(taskReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}