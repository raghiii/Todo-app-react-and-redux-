{"ast":null,"code":"import _classCallCheck from \"/Users/raghav/Documents/Projects/todo/todoapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/raghav/Documents/Projects/todo/todoapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/raghav/Documents/Projects/todo/todoapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/raghav/Documents/Projects/todo/todoapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/raghav/Documents/Projects/todo/todoapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/raghav/Documents/Projects/todo/todoapp/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/header/\";\nimport TaskBar from \"./components/taskbar/\";\nimport TaskList from \"./components/tasklist/\";\nimport store from \"./reducers\";\nimport Filter from \"./components/filter/\";\nimport \"./style.css\";\nimport { connect } from \"react-redux\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // state = {\n    //   d: \"\"\n    // };\n    // componentDidMount() {\n    //   store.subscribe(() => {\n    //     console.log(\"Logged\");\n    //     this.setState({ d: \"\" });\n    //   });\n    // }\n    value: function render() {\n      var todo = this.props.todo;\n      var filter = this.props.filter;\n      var filteredState = {\n        todo: [],\n        filter: \"\"\n      }; //store.getState().filter\n\n      if (filter === \"ACTIVE_FILTER\") {\n        filteredState.todo = todo.filter(function (state) {\n          return !state.isCompleted;\n        });\n        filteredState.filter = filter;\n        console.log(filteredState);\n      }\n\n      if (filter === \"DONE_FILTER\") {\n        filteredState.todo = todo.filter(function (state) {\n          return state.isCompleted;\n        });\n        filteredState.filter = filter;\n        console.log(filteredState);\n      }\n\n      if (filter === \"ALL_FILTER\" || filter === \"\") {\n        filteredState.todo = todo;\n        filteredState.filter = filter;\n        console.log(filteredState);\n      }\n\n      return React.createElement(\"div\", {\n        id: \"one\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(TaskBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(TaskList, {\n        todo: filteredState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Filter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todoItems: state.todo,\n    filter: state.filter\n  };\n};\n\nvar tasklist = connect(mapStateToProps, null)(App);\nexport default tasklist; //export default connect()(App);\n\n/*\nimport { combineReducers, createStore } from \"redux\";\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"CHANGE_NAME\": {\n      state = { ...state, name: action.payload };\n      break;\n    }\n    case \"CHANGE_AGE\": {\n      state = { ...state, age: action.payload };\n      break;\n    }\n  }\n  return state;\n};\n\nconst tweetsReducer = (state = [], action) => {\n  return state;\n};\n\nconst reducers = combineReducers({\n  user: userReducer,\n  tweets: tweetsReducer\n});\n\nconst store = createStore(reducers);\n\nstore.subscribe(() => {\n  console.log(\"store changed\", store.getState());\n});\n\nstore.dispatch({\n  type: \"CHANGE_NAME\",\n  payload: \"Will\"\n});\nstore.dispatch({\n  type: \"CHANGE_AGE\",\n  payload: 35\n});\n*/","map":{"version":3,"sources":["/Users/raghav/Documents/Projects/todo/todoapp/src/App.js"],"names":["React","Component","Header","TaskBar","TaskList","store","Filter","connect","App","todo","props","filter","filteredState","state","isCompleted","console","log","mapStateToProps","todoItems","tasklist"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,G;;;;;;;;;;;;;AACJ;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;6BAES;AACP,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;AACA,UAAIE,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,UAAIC,aAAa,GAAG;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYE,QAAAA,MAAM,EAAE;AAApB,OAApB,CAHO,CAIP;;AACA,UAAIA,MAAM,KAAK,eAAf,EAAgC;AAC9BC,QAAAA,aAAa,CAACH,IAAd,GAAqBA,IAAI,CAACE,MAAL,CAAY,UAAAE,KAAK;AAAA,iBAAI,CAACA,KAAK,CAACC,WAAX;AAAA,SAAjB,CAArB;AACAF,QAAAA,aAAa,CAACD,MAAd,GAAuBA,MAAvB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACD;;AAED,UAAID,MAAM,KAAK,aAAf,EAA8B;AAC5BC,QAAAA,aAAa,CAACH,IAAd,GAAqBA,IAAI,CAACE,MAAL,CAAY,UAAAE,KAAK;AAAA,iBAAIA,KAAK,CAACC,WAAV;AAAA,SAAjB,CAArB;AACAF,QAAAA,aAAa,CAACD,MAAd,GAAuBA,MAAvB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACD;;AAED,UAAID,MAAM,KAAK,YAAX,IAA2BA,MAAM,KAAK,EAA1C,EAA8C;AAC5CC,QAAAA,aAAa,CAACH,IAAd,GAAqBA,IAArB;AACAG,QAAAA,aAAa,CAACD,MAAd,GAAuBA,MAAvB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACD;;AAED,aACE;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EA3CeX,S;;AA8ClB,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAAAJ,KAAK,EAAI;AAC/B,SAAO;AACLK,IAAAA,SAAS,EAAEL,KAAK,CAACJ,IADZ;AAELE,IAAAA,MAAM,EAAEE,KAAK,CAACF;AAFT,GAAP;AAID,CALD;;AAOA,IAAMQ,QAAQ,GAAGZ,OAAO,CACtBU,eADsB,EAEtB,IAFsB,CAAP,CAGfT,GAHe,CAAjB;AAIA,eAAeW,QAAf,C,CAEA;;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/header/\";\nimport TaskBar from \"./components/taskbar/\";\nimport TaskList from \"./components/tasklist/\";\nimport store from \"./reducers\";\nimport Filter from \"./components/filter/\";\nimport \"./style.css\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  // state = {\n  //   d: \"\"\n  // };\n\n  // componentDidMount() {\n  //   store.subscribe(() => {\n  //     console.log(\"Logged\");\n  //     this.setState({ d: \"\" });\n  //   });\n  // }\n\n  render() {\n    let todo = this.props.todo;\n    let filter = this.props.filter;\n    let filteredState = { todo: [], filter: \"\" };\n    //store.getState().filter\n    if (filter === \"ACTIVE_FILTER\") {\n      filteredState.todo = todo.filter(state => !state.isCompleted);\n      filteredState.filter = filter;\n      console.log(filteredState);\n    }\n\n    if (filter === \"DONE_FILTER\") {\n      filteredState.todo = todo.filter(state => state.isCompleted);\n      filteredState.filter = filter;\n      console.log(filteredState);\n    }\n\n    if (filter === \"ALL_FILTER\" || filter === \"\") {\n      filteredState.todo = todo;\n      filteredState.filter = filter;\n      console.log(filteredState);\n    }\n\n    return (\n      <div id=\"one\">\n        <Header />\n        <TaskBar />\n        <TaskList todo={filteredState} />\n        <Filter />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoItems: state.todo,\n    filter: state.filter\n  };\n};\n\nconst tasklist = connect(\n  mapStateToProps,\n  null\n)(App);\nexport default tasklist;\n\n//export default connect()(App);\n\n/*\nimport { combineReducers, createStore } from \"redux\";\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"CHANGE_NAME\": {\n      state = { ...state, name: action.payload };\n      break;\n    }\n    case \"CHANGE_AGE\": {\n      state = { ...state, age: action.payload };\n      break;\n    }\n  }\n  return state;\n};\n\nconst tweetsReducer = (state = [], action) => {\n  return state;\n};\n\nconst reducers = combineReducers({\n  user: userReducer,\n  tweets: tweetsReducer\n});\n\nconst store = createStore(reducers);\n\nstore.subscribe(() => {\n  console.log(\"store changed\", store.getState());\n});\n\nstore.dispatch({\n  type: \"CHANGE_NAME\",\n  payload: \"Will\"\n});\nstore.dispatch({\n  type: \"CHANGE_AGE\",\n  payload: 35\n});\n*/\n"]},"metadata":{},"sourceType":"module"}