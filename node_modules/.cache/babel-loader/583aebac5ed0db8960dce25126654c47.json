{"ast":null,"code":"import _classCallCheck from \"/Users/raghav/Documents/Projects/todo/todoapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/raghav/Documents/Projects/todo/todoapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/raghav/Documents/Projects/todo/todoapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/raghav/Documents/Projects/todo/todoapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/raghav/Documents/Projects/todo/todoapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/raghav/Documents/Projects/todo/todoapp/src/components/tasklist/index.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Task from \"../../components/task\";\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskList, _React$Component);\n\n  function TaskList() {\n    _classCallCheck(this, TaskList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TaskList).apply(this, arguments));\n  }\n\n  _createClass(TaskList, [{\n    key: \"render\",\n    value: function render() {\n      var todo = this.props.todo;\n      var filter = this.props.filter;\n      var filteredState = {\n        todo: [],\n        filter: \"\"\n      };\n\n      if (filter === \"ACTIVE_FILTER\") {\n        filteredState.todo = todo.filter(function (state) {\n          return !state.isCompleted;\n        });\n        filteredState.filter = filter;\n        console.log(filteredState);\n      }\n\n      if (filter === \"DONE_FILTER\") {\n        filteredState.todo = todo.filter(function (state) {\n          return state.isCompleted;\n        });\n        filteredState.filter = filter;\n        console.log(filteredState);\n      }\n\n      if (filter === \"ALL_FILTER\" || filter === \"\") {\n        filteredState.todo = todo;\n        filteredState.filter = filter;\n        console.log(filteredState);\n      }\n\n      console.log(this.props);\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Tasks\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, console.log(this.props.tasks), this.props.tasks.map(function (task, index) {\n        return React.createElement(Task, {\n          key: index,\n          task: task,\n          id: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return TaskList;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.todo\n  };\n}\n\nexport default connect(mapStateToProps)(TaskList);","map":{"version":3,"sources":["/Users/raghav/Documents/Projects/todo/todoapp/src/components/tasklist/index.js"],"names":["React","connect","Task","TaskList","todo","props","filter","filteredState","state","isCompleted","console","log","tasks","map","task","index","Component","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;IAEMC,Q;;;;;;;;;;;;;6BACK;AACP,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;AACA,UAAIE,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,UAAIC,aAAa,GAAG;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYE,QAAAA,MAAM,EAAE;AAApB,OAApB;;AAEA,UAAIA,MAAM,KAAK,eAAf,EAAgC;AAC9BC,QAAAA,aAAa,CAACH,IAAd,GAAqBA,IAAI,CAACE,MAAL,CAAY,UAAAE,KAAK;AAAA,iBAAI,CAACA,KAAK,CAACC,WAAX;AAAA,SAAjB,CAArB;AACAF,QAAAA,aAAa,CAACD,MAAd,GAAuBA,MAAvB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACD;;AAED,UAAID,MAAM,KAAK,aAAf,EAA8B;AAC5BC,QAAAA,aAAa,CAACH,IAAd,GAAqBA,IAAI,CAACE,MAAL,CAAY,UAAAE,KAAK;AAAA,iBAAIA,KAAK,CAACC,WAAV;AAAA,SAAjB,CAArB;AACAF,QAAAA,aAAa,CAACD,MAAd,GAAuBA,MAAvB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACD;;AAED,UAAID,MAAM,KAAK,YAAX,IAA2BA,MAAM,KAAK,EAA1C,EAA8C;AAC5CC,QAAAA,aAAa,CAACH,IAAd,GAAqBA,IAArB;AACAG,QAAAA,aAAa,CAACD,MAAd,GAAuBA,MAAvB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACD;;AACDG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGK,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,KAAvB,CADH,EAGG,KAAKP,KAAL,CAAWO,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAOC,KAAP;AAAA,eACpB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,KAAX;AAAkB,UAAA,IAAI,EAAED,IAAxB;AAA8B,UAAA,EAAE,EAAEC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADoB;AAAA,OAArB,CAHH,CAPF,CADF;AAiBD;;;;EAzCoBf,KAAK,CAACgB,S;;AA4C7B,SAASC,eAAT,CAAyBT,KAAzB,EAAgC;AAC9B,SAAO;AAAEI,IAAAA,KAAK,EAAEJ,KAAK,CAACJ;AAAf,GAAP;AACD;;AAED,eAAeH,OAAO,CAACgB,eAAD,CAAP,CAAyBd,QAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Task from \"../../components/task\";\n\nclass TaskList extends React.Component {\n  render() {\n    let todo = this.props.todo;\n    let filter = this.props.filter;\n    let filteredState = { todo: [], filter: \"\" };\n\n    if (filter === \"ACTIVE_FILTER\") {\n      filteredState.todo = todo.filter(state => !state.isCompleted);\n      filteredState.filter = filter;\n      console.log(filteredState);\n    }\n\n    if (filter === \"DONE_FILTER\") {\n      filteredState.todo = todo.filter(state => state.isCompleted);\n      filteredState.filter = filter;\n      console.log(filteredState);\n    }\n\n    if (filter === \"ALL_FILTER\" || filter === \"\") {\n      filteredState.todo = todo;\n      filteredState.filter = filter;\n      console.log(filteredState);\n    }\n    console.log(this.props);\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Tasks</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {console.log(this.props.tasks)}\n\n          {this.props.tasks.map((task, index) => (\n            <Task key={index} task={task} id={index} />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { tasks: state.todo };\n}\n\nexport default connect(mapStateToProps)(TaskList);\n"]},"metadata":{},"sourceType":"module"}